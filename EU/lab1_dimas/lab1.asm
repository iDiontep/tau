;================================================================================================== 
; Счётчик
;================================================================================================== 
; Автор:				Татынов Д. А.
; Версия:				1.0
; Дата:					13.04.2024
; Название:				Rain
; Микроконтроллер:		ATmega16
; Тактовая частота:		8 МГц 
;==================================================================================================

;==================================================================================================  
; Назначение
;================================================================================================== 
; 1) Циклический подсчёт числа нажатий на кнопку от 0 до 9;
; 2) Вывод количества нажатий на семисегментный индикатор.
;================================================================================================== 

;================================================================================================== 
; Внешние устройства
;================================================================================================== 
; 1) Кнопка подключена к PB4 (1 - кнопка отжата, 0 - кнопка нажата);
; 2) Семисегментный индикатор подключён к пинам PC0-PC7: 
;    PC0-a, PC1-b, PC2-c, PC3-d, PC4-e, PC5-f, PC6-g, PC7-h;
; 3) Управляющий транзистор семисегментного индикатора подключён к PB0.
;================================================================================================== 

;==================================================================================================  
; Задание
;================================================================================================== 
;10) Дождь из светодиодов. При нажатии на кнопку PA0 генерируются 
;рандомные числа, которые задают режим горения светодиодов каждую 
;секунду. Чтобы был эффект дождя сначала загораются светодиоды порта A, 
;после эти же светодиоды порта B, а на порте A новое сгенерированное число, 
;затем с порта B на порт C, с порта A на порт B, а в порт A новое 
;сгенерированное число и так далее до порта D, c порта D число никуда не 
;переходит, а просто исчезает. Дождь идёт до следующего нажатия на кнопку. 
;После нажатии дождь прекращается, т.е. все светодиоды погашены. При 
;последующем нажатии дождь продолжается с того места, где был остановлен. 
;Колонка 0-х светодиодов не должна гореть.
         
;================================================================================================== 

.include "m16def.inc"			; Присоединение файла описаний
.list							; Включение листинга                                                                      
;================================================================================================== 

;==================================================================================================
; Регистры переменных
;==================================================================================================
.def tempL	  = R16				; Младший оперативный регистр
.def tempH    = R17             ; Старший оперативный регистр
.def delay1   = R18				; Младший регистр задержки
.def delay2   = R19				; Средний регистр задержки
.def delay3   = R20				; Старший регистр задаржки
.def random   = R21             ; Случайное число
.def temp	  = R22				; Регистр оперативный
.def sbrosA	  = R23				; Регистр оперативный
.def sbrosB	  = R24				; Регистр оперативный
;==================================================================================================

;==================================================================================================
; Константы
;==================================================================================================
.equ ValueDelay1 = 0x00			; 0x00 величина младшего регистра задержки
.equ ValueDelay2 = 0x6a			; 0x6a величина среднего регистра задержки 
.equ ValueDelay3 = 0x18			; 0x18 величина старшего регистра задержки 
;==================================================================================================

;==================================================================================================
; Величина задержки
;==================================================================================================
; 1) Частота 8 МГц = 8000000 Гц;
; 2) 5 тактов за один цикл;
; 3) Время 1 секунда
; 4) Количество циклов Х = 1 / [(1 / 8000000) * 5] = 1600000 = 0x186a00).   
;==================================================================================================

;================================================================================================== 
; Инициализация
;================================================================================================== 
.cseg							; Сегмент памяти программы
.org	$0000					; Вектор сброса по адресу 0
rjmp	Init                    ; Преход к подпрограмме инициализации
;==================================================================================================

;==================================================================================================
; Прерывания
;==================================================================================================
.org  INT0addr					; $0002	Внешнее прерывание регистра 0
reti							; У данного прерывания нет подпрограммы обработки

.org  INT1addr					; $0004	Внешнее прерывание регистра 1
reti							; У данного прерывания нет подпрограммы обработки

.org  OC2addr					; $0006	Совпадение по каналу таймера-счётчика 2
reti							; У данного прерывания нет подпрограммы обработки

.org  OVF2addr					; $0008	Таймер-счётчик 2 переполнен
reti							; У данного прерывания нет подпрограммы обработки

.org  ICP1addr					; $000A	Захват события таймером-счётчиком 1
reti							; У данного прерывания нет подпрограммы обработки

.org  OC1Aaddr					; $000C	Совпадение по каналу A таймера-счётчика 1
reti							; У данного прерывания нет подпрограммы обработки

.org  OC1Baddr					; $000E	Совпадение по каналу B таймера-счётчика 1
reti							; У данного прерывания нет подпрограммы обработки

.org  OVF1addr					; $0010	Таймер-счётчик 1 переполнен
reti							; У данного прерывания нет подпрограммы обработки

.org  OVF0addr					; $0012	Таймер-счётчик 0 переполнен
reti							; У данного прерывания нет подпрограммы обработки

.org  SPIaddr					; $0014	Передача по последовательному интерфейсу завершена
reti							; У данного прерывания нет подпрограммы обработки

.org  URXCaddr					; $0016	Приём по приёмо-передатчику выполнен
reti							; У данного прерывания нет подпрограммы обработки

.org  UDREaddr					; $0018	Регистр данных приёма-передатчика пуст
reti							; У данного прерывания нет подпрограммы обработки

.org UTXCaddr					; $001A	Передача по приёмо-передатчику выполнена
reti							; У данного прерывания нет подпрограммы обработки

.org ADCCaddr					; $001C Аналогово-цифровое преобразование выполнено
reti							; У данного прерывания нет подпрограммы обработки

.org ERDYaddr					; $001E	Готовность энергонезависимой памяти
reti							; У данного прерывания нет подпрограммы обработки

.org ACIaddr					; $0020	Аналоговый компаратор
reti							; У данного прерывания нет подпрограммы обработки

.org TWIaddr					; $0022 Двухпроводной последовательный интерфейс
reti							; У данного прерывания нет подпрограммы обработки

.org INT2addr					; $0024 Внешнее прерывание регистра 2
reti							; У данного прерывания нет подпрограммы обработки

.org OC0addr					; $0026 Совпадение по каналу таймера-счётчика 0
reti							; У данного прерывания нет подпрограммы обработки

.org SPMRaddr					; $0028 Готовность записи в память программ
reti							; У данного прерывания нет подпрограммы обработки
;==================================================================================================

;==================================================================================================
; Начало инициализации
;================================================================================================== 
Init:

;==================================================================================================
; Инициализация стека
;================================================================================================== 
InitStack:  	  
	ldi	   tempL, Low(RAMEND)	; Загрузка младшего байта адреса вершины стека 
	ldi    tempH, High(RAMEND)  ; Загрузка старшего байта адреса вершины стека
	out	   SPL, tempL           ; Инициализация младшего байта адреса вершины стека
	out    SPH, tempH           ; Инициализация старшего байта адреса вершины стека 
;==================================================================================================

;==================================================================================================
; Инициализация порта А
;================================================================================================== 
InitPortA: 
	ldi	   tempL, 0b11111110	; PB0 - выход на транзистор, PB4 - вход от кнопки,
								; выходы (PB1-PB3, PB5-PB7) не используются 
	ldi    tempH, 0b00000001	; PB4 - вход с подтягивающем резистором, PB0 - выход имеет
								; высокий уровень, выходы (PB1-PB3, PB5-PB7) имеют низкие уровни           
	out    DDRA, tempL			; Задание конфигурации пинов порта B (0 - вход, 1 - выход)  
	out    PortA, tempH			; Задание уровней сигналов на выходах порта B (0 - LOW, 1 - HIGH) 
								; и подтягивающих резисторов для входов (0 - без R, 1 - c R)     
;==================================================================================================

;================================================================================================== 
; Инициализация порта B
;================================================================================================== 
InitPortB: 
	ldi	   tempL, 0b11111111	; PB0 - выход на транзистор, PB4 - вход от кнопки,
								; выходы (PB1-PB3, PB5-PB7) не используются 
	ldi    tempH, 0b00000000	; PB4 - вход с подтягивающем резистором, PB0 - выход имеет
								; высокий уровень, выходы (PB1-PB3, PB5-PB7) имеют низкие уровни           
	out    DDRB, tempL			; Задание конфигурации пинов порта B (0 - вход, 1 - выход)  
	out    PortB, tempH			; Задание уровней сигналов на выходах порта B (0 - LOW, 1 - HIGH) 
								; и подтягивающих резисторов для входов (0 - без R, 1 - c R)   
;==================================================================================================

;==================================================================================================
; Инициализация порта C
;==================================================================================================
InitPortC: 
	ldi	   tempL, 0b11111111	; PB0 - выход на транзистор, PB4 - вход от кнопки,
								; выходы (PB1-PB3, PB5-PB7) не используются 
	ldi    tempH, 0b00000000	; PB4 - вход с подтягивающем резистором, PB0 - выход имеет
								; высокий уровень, выходы (PB1-PB3, PB5-PB7) имеют низкие уровни           
	out    DDRC, tempL			; Задание конфигурации пинов порта B (0 - вход, 1 - выход)  
	out    PortC, tempH			; Задание уровней сигналов на выходах порта B (0 - LOW, 1 - HIGH) 
								; и подтягивающих резисторов для входов (0 - без R, 1 - c R)     
;================================================================================================== 

;==================================================================================================
; Инициализация порта D
;==================================================================================================
InitPortD: 
	ldi	   tempL, 0b11111111	; PB0 - выход на транзистор, PB4 - вход от кнопки,
								; выходы (PB1-PB3, PB5-PB7) не используются 
	ldi    tempH, 0b00000000	; PB4 - вход с подтягивающем резистором, PB0 - выход имеет
								; высокий уровень, выходы (PB1-PB3, PB5-PB7) имеют низкие уровни           
	out    DDRD, tempL			; Задание конфигурации пинов порта B (0 - вход, 1 - выход)  
	out    PortD, tempH			; Задание уровней сигналов на выходах порта B (0 - LOW, 1 - HIGH) 
								; и подтягивающих резисторов для входов (0 - без R, 1 - c R) 
;================================================================================================== 

;==================================================================================================  
; Инициализация переменных
;==================================================================================================  
InitVar: 
	ldi tempL, 0
	mov random, tempL
	clr sbrosA
	clr sbrosB
;================================================================================================== 

;==================================================================================================
; Конец инициализации
;==================================================================================================

;==================================================================================================
; Начало цикла
;==================================================================================================  
Start: 
 

KeyIsPress:  
	sbic  PinA, PA0				; Проверка нажатия кнопки
    rjmp  KeyIsPress		    ; Если кнопка не нажата, то ожидать нажатия
KeyIsRelease:  
	out   PortA, sbrosA
	out   PortB, sbrosB
	out   PortC, tempL
	out   PortD, tempH
	sbis  PinA, PA0				; Проверка отпускания кнопки
    rjmp  KeyIsRelease			; Если кнопка не отпущена, то ожидать отпускания
DelayAfterPress:  
	rcall Delay_DK					; Вызов подпрограммы задержки 
 	
RainGo:    
    in   temp, PortC            ;
    out   PortD, tempL			; 
    in   temp, PortB            ;
    out   PortC, tempL			;
	in   temp, PortA            ;
    out   PortB, tempL			; 
	rcall  Rand
pushrain:
    out   PortA, Random
  
;	rcall Delay
	sbic  PinA, PA0				; Проверка нажатия кнопки
    rjmp  RainGo		    ; Если кнопка не нажата, то ожидать нажатия
	
	in   sbrosA, PortA
	in   sbrosB, PortB
	in   tempL, PortC
	in   tempH, PortD
	clr temp;
   	out   PortA, temp;
	out   PortB, temp;
	out   PortC, temp;
	out   PortD, temp;		; 
KeyIsReleaseAgain:  
	sbis  PinA, PA0				; Проверка отпускания кнопки
    rjmp  KeyIsReleaseAgain			; Если кнопка не отпущена, то ожидать отпускания
DelayAfterPressAgain:  
	rcall Delay_DK					; Вызов подпрограммы задержки 
 			    

End: 
    rjmp  Start                    ; Возвращение в начало цикла
;==================================================================================================
; Конец цикла
;==================================================================================================
  
;==================================================================================================

;==================================================================================================	
; Подпрограмма задержки
;==================================================================================================  
Delay: 
	ldi   delay1, ValueDelay1	; Загрузка величины младшего регистра задержки
    ldi   delay2, ValueDelay2	; Загрузка величины среднего регистра задержки
    ldi   delay3, ValueDelay3	; Загрузка величины старшего регистра задержки

DelayCycle:						; Цикл - 5 тактов
	subi  delay1, 1				; Декрементация младшего регистра задержки
    sbci  delay2, 0				; Уменьшение на величину переноса среднего регистра задержки
	sbci  delay3, 0				; Уменьшение на величину переноса старшего регистра задержки
	brcc  DelayCycle			; Если перенос равен нулю возвращение в начало цикла,
								; иначе выход из цикла

DelayEnd: 
	ret							; Выход из подпрограммы задержки
;==================================================================================================	
; Подпрограмма подавления дребезга
;==================================================================================================  
Delay_DK: 
	ldi   delay1, 80			; Загрузка величины младшего регистра задержки
    ldi   delay2, 38		; Загрузка величины среднего регистра задержки
    ldi   delay3, 01			; Загрузка величины старшего регистра задержки

DelayAgain:						; Цикл - 5 тактов
	subi  delay1, 1				; Декрементация младшего регистра задержки
    sbci  delay2, 0				; Уменьшение на величину переноса среднего регистра задержки
	sbci  delay3, 0				; Уменьшение на величину переноса старшего регистра задержки
	brcc  DelayCycle			; Если перенос равен нулю возвращение в начало цикла,
								; иначе выход из цикла

Delay_DK_End: 
	ret							; Выход из подпрограммы задержки

;================================================================================================== 
; Подпрограмма формирования случайного числа
;================================================================================================== 
Rand:
 mov tempL,Random ; Загрузка в оперативный регистр случайного числа 
 add tempL,Random ; Суммирование: tempL=tempL+Random 
 add tempL,Random ; Суммирование: tempL=tempL+Random 
 ldi tempH,5 ; Загрузка в оперативный регист числа 5
 add tempL, tempH ; Суммирование: tempL=tempL+tempH 
 mov Random, tempL ; Загрузка в случайное число оперативного регистра 
 rjmp pushrain;
 ret 
;================================================================================================== 

;==================================================================================================

;==================================================================================================
; Таблица перекодировки символов
;==================================================================================================
TABLE:    
	.db   0b00111111, 0b00000110		; Коды "0", "1"
    .db   0b01011011, 0b01001111		; Коды "2", "3"
    .db   0b01100110, 0b01101101		; Коды "4", "5"
	.db   0b01111101, 0b00000111		; Коды "6", "7"
	.db   0b01111111, 0b01101111		; Коды "8", "9"   
;==================================================================================================       



